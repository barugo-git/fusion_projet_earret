security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        # https://symfony.com/doc/current/security.html#loading-the-user-the-

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            user_checker: App\Security\UserChecker
            provider: app_user_provider
            custom_authenticator: App\Security\LoginAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                target: app_login
            login_link:
                check_route: login_check
                signature_properties: ['id']
                max_uses: 1
                lifetime: 3600
            remember_me:
                secret:   '%kernel.secret%' # required
                lifetime: 10 # 1 week in seconds
                path:  app_login
                # by default, the feature is enabled by checking a
                # checkbox in the login form (see below), uncomment the
                # following line to always enable it.
                always_remember_me: true
#    role_hierarchy:
        # un membre avec le ROLE_ADMIN aura également le ROLE_USER

        # Le ROLE_SUPER_ADMIN avec le ROLE_ALLOWED_TO_SWITCH qui permet de s'authentifier en se faisant passer pour n'importe quel membre. Particulièrement utile pour débugger son code.
#        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH,ROLE_CONSEILLER,
#                           ROLE_SUPERVISEUR,ROLE_BUREAU_ORIENTATION,
#                           ROLE_GREFFIER,ROLE_GREFFIER_EN_CHEF ,ROLE_PCA,
#                           ROLE_PCJ,ROLE_PCS, ROLE_PROCUREUR_GENERAL,
#                           ROLE_AVOCAT_GENERAL,
#                           ROLE_PRESIDENT_DE_STRUCTURE,
#                           ROLE_PRESIDENT_DE_SECTION,
#        ]
#        ROLE_SUPERVISEUR: [ROLE_BUREAU_ORIENTATION]
#        ROLE_: [ROLE_GREFFIER]




          # activate different ways to authenticate
          # https://symfony.com/doc/current/security.html#the-firewall

          # https://symfony.com/doc/current/security/impersonating_user.html
        # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
    # - { path: ^/admin, roles: ROLE_ADMIN }
    # - { path: ^/profile, roles: ROLE_USER }
#
#    - { path: '^/', roles: IS_AUTHENTICATED_FULLY, requires_channel: https }
#    - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
